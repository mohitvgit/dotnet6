# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
   - master

######################################################
# Variable Section
######################################################
variables:
    azureSubcription: 'Azure subscription 1 (032a1d12-63b4-44a6-ac8c-3317f7e2643e)'
    webAppName: "azuresept26"
    env-dev: "dotnet6"
    LinuxVM: "ubuntu-latest"
        
########################################################################
# Build Stage
########################################################################
stages:
 - stage: Build
   jobs:
     - job: BuildJob
       pool:
         vmImage: $(LinuxVM)
       steps:
         - task: DotNetCoreCLI@2
           displayName: Restore
           inputs:
             command: restore
             projects: "**/*.csproj"
         - task: DotNetCoreCLI@2
           displayName: Build
           inputs:
             projects: "**/*.csproj"
             arguments: "--configuration $(BuildConfiguration)"
         - task: DotNetCoreCLI@2
           displayName: Publish
           inputs:
            command: publish
            publishWebProjects: True
            arguments: "--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)"
            zipAfterPublish: True
         - task: PublishBuildArtifacts@1
           displayName: "Publish Artifact"
           inputs:
             PathtoPublish: '$(build.artifactstagingdirectory)'
           condition: succeededOrFailed() 
 
 ########################################################
 # DEPLOY TO DEV STAGE
 ########################################################
 - stage: DeployToDev
   jobs:   
     - job: Deploy
       pool:
          vmImage: $(LinuxVM)
       steps:
         - task: DownloadBuildArtifacts@0
           inputs:
             buildType: "current"
             downloadType: "single"
             artifactName: "drop"
             downloadPath: "$(System.ArtifactsDirectory)"
         - task: AzureRmWebAppDeployment@4
           displayName: "Deploy Azure App Service"
           inputs:
             ConnectionType: "AzureRM"
             ConnectedServiceName: "appbridge"
             azureSubcription: "$(Azure subscription 1)"
             appType: "webApp"
             WebAppName: "$(env-dev)"
             packageForLinux: "$(System.ArtifactsDirectory)/**/*.zip"